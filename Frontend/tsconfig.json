{
  "compilerOptions": {
    "baseUrl": "./",
    "noImplicitAny": true,
    "noImplicitReturns": true,
    "paths": {
      "ngx-edu-sharing-api": [
        "dist/edu-sharing-api/edu-sharing-api",
        "dist/edu-sharing-api"
      ],
      "ngx-edu-sharing-graphql": [
        "dist/edu-sharing-graphql/edu-sharing-graphql",
        "dist/edu-sharing-graphql"
      ],
      "ngx-edu-sharing-ui": [
        "dist/edu-sharing-ui/edu-sharing-ui",
        "dist/edu-sharing-ui"
      ],
      "ngx-rendering-service": [
        "projects/rendering-service/dist",
        "projects/rendering-service"
      ],
      "ngx-rendering-service-api": [
        "projects/rendering-service/projects/rendering-service-api/dist",
        "projects/rendering-service/projects/rendering-service-api"
      ],
      // Prevent imports from `projects` directory.
      //
      // Don't directly import modules from `projects`, but instead build project modules
      // separately, so they can be included by their paths from `dist` (see above).
      //
      // ```
      // import { Node } from 'projects/edu-sharing-api/src/lib/api/models'; // Don't do this!
      // import { Node } from 'ngx-edu-sharing-api'; // Yes!
      // ```
      "projects/*": [
        "",
      ],
      "@angular/*": [
        "./node_modules/@angular/*"
      ],
      "rxjs": [
        "./node_modules/rxjs"
      ],
      "rxjs/*": [
        "./node_modules/rxjs/*"
      ]
    },
    "declaration": false,
    "experimentalDecorators": true,
    "lib": ["es2022", "dom", "dom.iterable"],
    "module": "es2022",
    "moduleResolution": "node",
    "outDir": "./dist/out-tsc",
    "sourceMap": true,
    "target": "es2022",
    "typeRoots": [
      "./node_modules/@types"
    ],
    "downlevelIteration": true,
    // Needed for imports of @angular/compiler-cli in version 13.3.5. Can be removed, when
    // @angular/compiler-cli compiles without this.
    "allowSyntheticDefaultImports": true,
    // Public class fields in JavaScript are likely to be standardized in a different way than
    // TypeScript used to assume. This opts for the legacy behavior. Relevant code will likely have
    // to be migrated in the future. However, as of Angular 16, `false` is still the default value.
    // See
    // https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html#the-usedefineforclassfields-flag-and-the-declare-property-modifier
    "useDefineForClassFields": false,
  },
  "angularCompilerOptions": {
    "strictInjectionParameters": true,
    "strictInputAccessModifiers": true,
    "strictTemplates": true
  }
}
