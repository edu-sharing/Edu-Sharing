@import '../../../core-ui-module/styles/variables';

:host {
    display: flex;
    flex-direction: row-reverse; // Automatically scroll to the end
    align-items: center;
    overflow-y: hidden;
    overflow-x: auto;
    // Firefox
    scrollbar-width: thin;
    // Chromium-based
    &::-webkit-scrollbar {
        height: 4px;
    }
    &::-webkit-scrollbar-thumb {
        background-color: $textMediumLight;
    }
}

:host[short='always'] .breadcrumb-full {
    display: none;
}

:host[short='never'] .breadcrumb-short {
    display: none;
}

:host[short='auto'] {
    @media screen and (max-width: $mobileTabSwitchWidth) {
        .breadcrumb-full {
            display: none;
        }
    }
    @media screen and (min-width: $mobileTabSwitchWidth) {
        .breadcrumb-short {
            display: none;
        }
    }
}

.mobile-only {
    @media screen and (min-width: $mobileTabSwitchWidth) {
        display: none !important;
    }
}

.breadcrumb::before {
    content: '' !important;
}

.breadcrumb {
    display: flex;
    flex-grow: 1;
    max-height: 1.5em;
    align-items: center;
    &:not(.breadcrumb-readonly) {
        @media screen and (max-width: $mobileTabSwitchWidth) {
            min-height: 25px;
            // margin-left: -10px; // This doesn't work if we want to scroll the host container
            .breadcrumb-element-home {
                margin-left: 10px;
            }
        }
    }
    &.breadcrumb-readonly {
        // This should wrap as a whole with '>' separators blending into lines.
        display: inline-flex;
        align-items: center;
        font-size: $fontSizeSmall;
    }
}
:host ::ng-deep {
    .breadcrumb-element {
        position: relative;
        max-height: 1.5em;
        display: inline-flex;
        align-items: center;
        &.cdk-drop-list-dragging {
            > *:first-child {
                display: none;
            }
        }
    }
}

i.home-icon,
i.breadcrumb-arrow {
    width: 35px;
    text-align: center;
}

button {
    padding: unset;
    border: unset;
    background: unset;
    &:focus {
        outline: unset;
    }
}

.breadcrumb-element-home {
    text-decoration: none;
}

.breadcrumb-inner {
    color: $primary;
    display: block;
    padding: 2px 4px;
    gap: 3px;
    white-space: nowrap;
    align-items: center;
    max-width: 300px;
    overflow: hidden;
    text-overflow: ellipsis;
}

.breadcrumb-readonly .breadcrumb-element:not(.breadcrumb-element-active) {
    color: $textLight;
}

.breadcrumb-element-home.cdk-keyboard-focused {
    @include setGlobalKeyboardFocus();
    // Other focus styles are handled by node-url.
}

.breadcrumb-element-active,
.breadcrumb-inner-active {
    color: unset;
    font-weight: bold;
}

.mat-ripple {
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    pointer-events: none;
}

.home-notice {
    color: $textLight;
}

.breadcrumb-arrow {
    font-size: 15pt;
    color: $textLight;
}
